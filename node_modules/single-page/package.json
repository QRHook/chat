{
  "name": "single-page",
  "version": "0.0.0",
  "description": "pushState callback with a #hash fallback",
  "main": "index.js",
  "scripts": {
    "test": "tap test/*.js"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/substack/single-page.git"
  },
  "homepage": "https://github.com/substack/single-page",
  "keywords": [
    "pushState",
    "single-page",
    "client-side",
    "browser"
  ],
  "author": {
    "name": "James Halliday",
    "email": "mail@substack.net",
    "url": "http://substack.net"
  },
  "license": "MIT",
  "readme": "# single-page\n\npushState callback with a #hash fallback\n\n# example\n\nGiven some html with elements `#foo`, `#bar`, and `#baz`:\n\n``` html\n<html>\n  <style>\n  </style>\n  <body>\n    <div id=\"foo\">\n      foo foO fOo fOO Foo FoO FOo FOO\n      <div><a href=\"/bar\">bar</a></div>\n    </div>\n    \n    <div id=\"bar\">\n      bar baR bAr bAR Bar BaR BAr BAR\n      <div><a href=\"/baz\">baz</a></div>\n    </div>\n    \n    <div id=\"baz\">\n      baz baZ bAz bAZ Baz BaZ BAz BAZ\n      <div><a href=\"/foo\">foo</a></div>\n    </div>\n    \n    <script src=\"bundle.js\"></script>\n  </body>\n</html>\n```\n\nNow turn each of the divs into pages with their own routes.\nNote that this module doesn't update the link callbacks for you. You'll need to\nhandle that for yourself.\n\n``` js\nvar divs = {\n    foo: document.querySelector('#foo'),\n    bar: document.querySelector('#bar'),\n    baz: document.querySelector('#baz')\n};\n\nvar singlePage = require('single-page');\nvar showPage = singlePage(function (href) {\n    Object.keys(divs).forEach(function (key) {\n        hide(divs[key]);\n    });\n    \n    var div = divs[href.replace(/^\\//, '')];\n    if (div) show(div)\n    else show(divs.foo)\n    \n    function hide (e) { e.style.display = 'none' }\n    function show (e) { e.style.display = 'block' }\n});\n\nvar links = document.querySelectorAll('a[href]');\nfor (var i = 0; i < links.length; i++) {\n    links[i].addEventListener('click', function (ev) {\n        ev.preventDefault();\n        showPage(this.getAttribute('href'));\n    });\n}\n```\n\nYou'll need to have a server that will serve up the same static content for each\nof the pushState routes. Something like this will work:\n\n``` js\nvar http = require('http');\nvar ecstatic = require('ecstatic')(__dirname);\n\nvar server = http.createServer(function (req, res) {\n    if (/^\\/[^\\/.]+$/.test(req.url)) {\n        req.url = '/';\n    }\n    ecstatic(req, res);\n});\nserver.listen(5000);\n```\n\nNow when you go to `http://localhost:5000` and click around, you'll see `/foo`,\n`/bar` and `/baz` in the address bar when you click links, even though you're\nnot reloading the page.\n\n# methods\n\n``` js\nvar singlePage = require('single-page')\n```\n\n## var showPage = singlePage(cb)\n\nFire `cb(href)` at the start and whenever the page navigation changes so you can\nupdate the page contents accordingly.\n\n## showPage(href)\n\nNavigate to `href`, firing the callback passed to singlePage.\n\n# install\n\nWith `npm` do:\n\n```\nnpm install single-page\n```\n\nUse [browserify](http://browserify.org) do bundle this module into your\napplication.\n\n# license\n\nMIT\n",
  "readmeFilename": "readme.markdown",
  "_id": "single-page@0.0.0",
  "dist": {
    "shasum": "ac36059658a83e208db1b96b19ca4b28384f4af0"
  },
  "_from": "single-page"
}
